/*
Name        :       MK MOOSA KASIM
Date        :       22-01-2022
Description :       Program to circular Right shift
                    Read a number num from user
                    Read a number n from user.
                    Pass num and n to the function.
                    Shift num, n times (towards right).
                    While shifting the shifted bits should get replaced at the alternate end.
                    For right shifting, the shifted bits should come at left most side.
                    Return the new number from the function.
                    Print the new number.

Input       :       Enter num: 12
                    Enter n : 3
Output      :       Result : 10000000 00000000 00000000 00000001
*/

#include <stdio.h>

int circular_right(unsigned int num, int n)
{
	return  ((num & ((1 << n) - 1)) << (sizeof(int) * 8 - n)) | (num >> n);

}

int print_bits(int ret)
{
    unsigned mask;

	for(mask = (1 << (sizeof(int) * 8 - 1)); mask; mask >>= 1)
	{
		(ret & mask) ? putchar('1'): putchar('0');
        
    }
}

int main()
{
    int num, n, ret;
    
    printf("Enter the num:");
    scanf("%d", &num);
    
    printf("Enter n:");
    scanf("%d", &n);
    
    ret = circular_right(num, n);
    printf("Result : ");    
    print_bits(ret);
   
}
